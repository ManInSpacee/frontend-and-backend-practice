const dialog = document.getElementById('MyDialog');
const openBtn = document.getElementById('OpenBtn');
const closeBtn = document.getElementById('CloseBtn');
const submitBtn = document.getElementById('SubmitBtn');
const form = document.getElementById('feedbackForm');
const themeToggle = document.getElementById('theme-toggle');
const sound = document.getElementById('mySound');
themeToggle.addEventListener('click', () => {
  sound.currentTime = 0;
  themeToggle.classList.toggle('active');
  if (themeToggle.classList.contains('active')) {
    sound.play();
    document.body.classList.add('dark-theme')
    themeToggle.textContent = '‚òÄÔ∏è';
  } else {
    document.body.classList.remove('dark-theme')
    themeToggle.textContent = 'üåô';
  }
})


openBtn.addEventListener('click', () => {
  dialog.showModal();
});

closeBtn.addEventListener('click', () => {
  dialog.close();
})


// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
dialog.addEventListener('click', (event) => {
  const rect = dialog.getBoundingClientRect();
  const clickedOutside =
    event.clientX < rect.left ||
    event.clientX > rect.right ||
    event.clientY < rect.top ||
    event.clientY > rect.bottom;

  if (clickedOutside) dialog.close();
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
submitBtn.addEventListener('click', () => {
  if (!form.checkValidity()) {
    form.reportValidity(); // –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –±—Ä–∞—É–∑–µ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    return;
  }

  const formData = new FormData(form);
  const data = Object.fromEntries(formData.entries());

  console.log('–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', data);
  alert('–°–ø–∞—Å–∏–±–æ, —Ñ–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');

  form.reset();
});

